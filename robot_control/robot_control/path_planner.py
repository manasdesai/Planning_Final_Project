'''
Planner Node for navigating the UR10e robot to a list of waypoints generated by a PRM based planner along
backward A* to search for the optimal path.
'''

import os
import sys
import rclpy
from rclpy.node import Node
from rclpy.qos import QoSProfile, QoSDurabilityPolicy
from rclpy.qos import QoSHistoryPolicy
from rclpy.qos import QoSReliabilityPolicy
from rclpy.qos import QoSProfile
from rclpy.qos import QoSProfile

from std_msgs.msg import Float64MultiArray
from std_msgs.msg import String
from std_msgs.msg import Bool
from std_msgs.msg import Float64

from geometry_msgs.msg import Pose
from geometry_msgs.msg import PoseArray
from geometry_msgs.msg import PoseStamped


class PathPlannerNode(Node):
    def __init__(self):
        super().__init__('path_planner_node')
        self.get_logger().info("Path Planner Node has started.") 
        
        # Initialize the publisher for the waypoints
        self.waypoint_publisher = self.create_publisher(Float64MultiArray, '/waypoints', 10)
        
        #Publish 5 dummy waypoints where each waypoint is a 6D vector representing the joint angles
        self.waypoints = Float64MultiArray()
        #Publish 5 dummy waypoints where each waypoint is a 6D vector representing the joint angles
        self.waypoints.data = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                               1.57, 1.57, 1.57, 1.57, 1.57, 1.57,
                               -1.57, -1.57, -1.57, -1.57, -1.57, -1.57,
                               3.14, 3.14, 3.14, 3.14, 3.14, 3.14,
                               -3.14, -3.14, -3.14, -3.14, -3.14, -3.14]
        # Publish the waypoints
        self.waypoint_publisher.publish(self.waypoints)